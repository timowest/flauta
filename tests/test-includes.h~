
#include "audio/dsp.h"

class bernoulli : public dsp { 
	virtual int getNumInputs();
	virtual int getNumOutputs();
	virtual void buildUserInterface(UI* interface);
	virtual void init(int samplingRate);
 	virtual void compute(int len, float** inputs, float** outputs);
};

class jetdrive : public dsp {
	virtual int getNumInputs();
	virtual int getNumOutputs();
	virtual void buildUserInterface(UI* interface);
	virtual void init(int samplingRate);
 	virtual void compute(int len, float** inputs, float** outputs);
};

class receptivity : public dsp {
	virtual int getNumInputs();
	virtual int getNumOutputs();
	virtual void buildUserInterface(UI* interface);
	virtual void init(int samplingRate);
 	virtual void compute(int len, float** inputs, float** outputs);
};

class turbulence : public dsp {
	virtual int getNumInputs();
	virtual int getNumOutputs();
	virtual void buildUserInterface(UI* interface);
	virtual void init(int samplingRate);
 	virtual void compute(int len, float** inputs, float** outputs);
};

class vortex : public dsp {
	virtual int getNumInputs();
	virtual int getNumOutputs();
	virtual void buildUserInterface(UI* interface);
	virtual void init(int samplingRate);
 	virtual void compute(int len, float** inputs, float** outputs);
};
